name: Train DDPG Model

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  train:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runner: [1, 2, 3, 4]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('pyproject.toml', 'poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          pip install poetry

      - name: Install dependencies with client group
        run: |
          poetry install --no-root --with client

      - name: Run training
        run: |
          poetry run python -m client.trainer --output-dir output

      - name: Zip output directory
        run: |
          zip -r model_${{ matrix.runner }}_artifacts.zip output

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model_${{ matrix.runner }}_artifacts
          path: model_${{ matrix.runner }}_artifacts.zip
          retention-days: 1
